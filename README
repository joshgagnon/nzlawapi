#CELERY START

pip install pdfminer==20140328
pip install pattern flask flask_cors requests psycopg2 lxml
pip install  pattern==2.6 nltk==3.4.5 elasticsearch

replace:
```
if os.name == "posix" and sys.platform == "darwin":
    from ctypes.macholib.dyld import dyld_find as _dyld_find
    def find_library(name):
        if name == 'CoreServices':
            return '/System/Library/Frameworks/CoreServices.framework/CoreService$
        elif name == 'libSystem.dylib':
            return '/usr/lib/libSystem.dylib'
        possible = ['lib%s.dylib' % name,
                    '%s.dylib' % name,
                    '%s.framework/%s' % (name, name)]
        for name in possible:
            try:
                return _dyld_find(name)
            except ValueError:
                continue
        return None
```
in lib/python2.7/ctypes/util.py


CONFIG_FILE=config_dev.py celery -A celeries  worker -l info --concurrency=4 -Ofair

# QUICK WGSI START FOR DEV
uwsgi --socket 127.0.0.1:5665 --module server --callable app --pyargv prod.py
#OR
git pull origin && NODE_ENV="production" gulp && uwsgi --socket 127.0.0.1:5665 --module server --callable app --pyargv prod.py

PROCESSING STEPS

# analyzes tags, heirarchy, refererences
# MUST be run
scripts/process_links.py

# inserts missing instrument references, processes definitions, creates skeleton
# can be skipped and done per request, but then elastic search will be out of sync
scripts/process_instruments.py

# takes the resulting processed docs and populates elasticsearch
scripts/populate_es.py

# entry point
server.py





# deployment
git pull
NODE_ENV=production gulp
sudo service browser restart



JAVASCRIPT

react.js, using reflux pattern